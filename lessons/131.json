[
  {
    "title": "ES6 - Use class Syntax to Define a Constructor Function",
    "content": [
      "ES6 provides a new syntax to create objects, using the class keyword.",
      "In ES5, an object can be created by defining a constructor function using the new keyword to instantiate the object.",
      "In ES6, a class declaration has a constructor method that is invoked with the new keyword. If the constructor method is not explicitly defined, then it is implicitly defined with no arguments.",
      "//Explicit constructor",
      "class SpaceShuttle {",
      "this.targetPlanet = targetPlanet + '!';",
      "};",
      "\ttakeOff() {",
      "\t\tconsole.log('To' + this.targetPlanet)",
      " \t},",
      " \t}",
      " \t",
      " //Implicit constructor",
      "class Rockey {",
      "\tlaunch {",
      "\t\tconsole.log('To the moon!';)",
      "}",
      "}",
      "",
      "const zeus = new SpaceShuttle('Jupiter')",
      "//prints to Jupiter! in console",
      "zeus.ttakeOff();",
      "\t",
      "const atlas = new Rocket();",
      "prints To the moon! in console",
      "atlas.launch();",
      "It should be noted that the class keyword declares a new function, to which a constructor is added. This constructor is invoked when new is called to create a new object.",
      "Note:UpperCaseCamel should be used by convention for ES6 class names, as in SpaceShuttle used above.",
      "The constructor method is a special method for creating and initializing an object created with a class. You will learn more about it in the Object Oriented Programming section of the JavaScript Algorithms and Data Structures Certification."
    ],
    "eTitle": "Exercise",
    "exercises": [
      {
        "instruction": [
          "Use the class keyword to write a constructor to create a Vegetable class..",
          "The Vegetable class allows you to create a vegetable object with a property name that gets passed to the constructor."
        ],
        "placeholder": [
          "// Setup",
          "//Only change code above this line",
          "",
          "//Only change code below this line",
          "const carrot = new Vegetable ('carrot')",
          "console.log(carrot.name); //Should display carrot"
        ]
      }
    ],
    "hint": [
      "Hint! ",
      " Vegetable should be a class with a defined constructor method.",
      " The class keyword should be used",
      " Vegetable should be able to be instantiate",
      "carrot.name should return carrot"
    ]
  }
]
