[
  {
    "title": "ES6 - Use Destructuring Assignment to Assign Variables from Nested Objects",
    "content": [
      "You can use the same principles from the previous two lessons to destructure values from nested objects.",
      "Using the object similar to previous examples:",
      "const user = {",
      "\t johnDoe: {",
      " \t \t age:34,",
      "email: 'johnDoe@freeCodeCamp.com'",
      "}",
      "};",
      "Here's how to extract the values of object properties and assign them to variables with the same name:",
      "const { johnDoe: {age, email}} = user;",
      "And here's how you can assign object propeties' values to variables with different names:",
      "const { johnDoe: {age:userAge; email: userEmail}} = user;"
    ],
    "eTitle": "Exercise",
    "exercises": [
      {
        "instruction": [
          "Replace the two assignments with an equivalent destructuring assignment. It should still assign the variables lowToday and highToday the values  of today.low and today.high  the LOCAL_FORECAST object."
        ],
        "placeholder": [
          "// Setup",
          "const LOCAL_FORECAST = {",
          " \t yesterday: { low: 61, high: 75 },",
          "\t today : {low : 64, high: 77},",
          "\t tomorrow: {low: 68, high: 80}",
          "};",
          "",
          "// Only change code below this line",
          "",
          "const lowToday = LOCAL_FORECAST.today.low;",
          "const highToday = LOCAL_FORECAST.today.high;",
          "",
          "//Only change code above this line"
        ]
      }
    ],
    "hint": [
      "Hint! ",
      " You should remove the ES5 assignment syntax.",
      " You should use destructuring to create the lowToday variable.",
      " You should use destructuring to create the highToday variable.",
      "lowToday should be equal to 64 and highToday should be equal to 77."
    ]
  }
]
