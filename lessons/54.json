[
  {
    "title": "Global vs Local Scope in Functions",
    "content": [
      "It is possible to have both local and global variables with the same name. When you do this, the local variable takes precedence over the global variable.",
      "In this example:",
      "const someVar = 'Hat'",
      "function myFun(){",
      "const someVar = 'Head'",
      "return someVar",
      "}",
      " ",
      "The function myFun will return the string Head because the local version of the variable is present.",
      ""
    ],
    "eTitle": "Exercise",
    "exercises": [
      {
        "instruction": "Add a local variable to myOutfit function to override the value of outerWear with the string sweater.",
        "placeholder": [
          "// Setup",
          "const outerWear = 'T-shirt'",
          "function myOutfit() {",
          "// Only change code below this line",
          "",
          "// Only change code above this line",
          "return outerWear",
          "}",
          "",
          "myOutfit();"
        ]
      }
    ],
    "hint": [
      "Hint! ",
      "You should not change the value of global outerWear.",
      "myOutfit should return the string sweater.",
      "You should add a local myVar variable",
      "You should not change the return statement"
    ]
  }
]
