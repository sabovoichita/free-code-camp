[
  {
    "title": "ES6 - Use the Spread Operator to Evaluate Arrays In-Place",
    "content": [
      "Es6 introduces the spread operator, which allows us to expand arrays and other expressions in places where multiple parameters or elements are expected.",
      "The ES5 code below uses apply() to compute the maximum value in an array:",
      "var arr = [6, 89, 3, 45];",
      "var maximus = Math.max.apply(null, arr);",
      "maximus would have a value of 89.",
      "We had to use Math.max.apply(null, arr) because Math.max(arr) returns NaN. Math.max() expects comma-sepatated arguments, but not an array. The sprea operator makes this syntax much better to read and maintain.",
      "const arr = [6, 89, 3, 45];",
      "const maximus = Math.max(...arr);",
      "maximus would havr a value of 89.",
      "...arr returns an unoacked array. In other words, it spreads the array. However, the spread operator only works in-place, like in an argument to a function or in an array literal. For example:.",
      "const spreaded = [...arr];",
      "However, the following code will not work:",
      "const spreaded = ...arr;"
    ],
    "eTitle": "Exercise",
    "exercises": [
      {
        "instruction": [
          "Coppy all contents of arr1 into another arr arr2 using the spread operator."
        ],
        "placeholder": [
          "// Setup",
          "const arr1 = ['JAN', 'FEB, 'MAR', 'APR', 'MAY'];",
          "let arr2;",
          "arr2 = []",
          "console.log(arr2)"
        ]
      }
    ],
    "hint": [
      "Hint! ",
      " arr2 should be correct copy of arr1.",
      " ... apread operator should be used to duplicate arr1.",
      " arr2 should remain unchanged when arr1 is changed"
    ]
  }
]
