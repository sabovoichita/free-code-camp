[
  {
    "title": "ES6 - Write Concise Object Literal Declarations Using Object Property Shorthand",
    "content": [
      "ES6 adds some nice support for easy defining object literals.",
      "Consider the code below:",
      "const getMousePosition = (x, y) ({",
      " \tx:x,",
      " \ty:y",
      "});",
      "getMousePosition is a simple function that returns an object containing two properties. ES6 provides the syntactic sugar to eliminate the redundancy of having to write x:x. You can simply write x once, and it will be converted to x:x(or something equivalent) under the hood. Here is the same function from above rewritten to use this new syntax:",
      "const getMousePosition = (x, y) =>({x,y})"
    ],
    "eTitle": "Exercise",
    "exercises": [
      {
        "instruction": [
          "Use object property shorthand with object literals to create and return an object with name, age and gender properties."
        ],
        "placeholder": [
          "// Setup",
          "const createPerson = (name, age, gender) =>",
          "//Only change code above this line",
          "\t({name, age, gender});",
          "//Only change code below this line",
          "console.log(createPerson('Zodiac Hasbro', 56, 'male'));"
        ]
      }
    ],
    "hint": [
      "Hint! ",
      " createPerson ('Zodiac Hasbro', 56, 'male') should return {name: 'Zodiac Hasbro', age: 56, gender:'male'}",
      " Your code should not use key:value"
    ]
  }
]
